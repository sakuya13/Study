-- implement (ab)+
data RegexAB 
    = Start
    | SeenA
    | SeenAB
    | Failure


inspect :: RegexAB -> Char -> RegexAB
inspect Start 'a' = SeenA
inspect SeenA 'b' = SeenAB
inspect SeenAB 'a' = SeenA
inspect _ _ = Failure


parse :: String -> RegexAB
parse str = foldl inspect Start str

-- end up with SeenAB
matchesAB :: String -> Bool
matchesAB str = SeenAB == parse str -- this isn't working

